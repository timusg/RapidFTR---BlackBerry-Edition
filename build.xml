<project name="RapidFTR---BlackBerry-Edition" default="test">
    <property environment="env"/>
    <property file="${env.BUILD_PROPERTIES_OVERRIDE}"/>
    <property file="build.properties"/>

    <taskdef resource="bb-ant-defs.xml" classpath="${bb-ant-tools-jar}"/>


    <condition property="isMac">
        <os family="mac"/>
    </condition>

    <condition property="isWindows">
        <os family="windows"/>
    </condition>

    <condition property="isUnixButNotMacOsX">
        <and>
            <os family="unix"/>
            <not>
                <os family="mac"/>
            </not>
        </and>
    </condition>

    <condition property="verify.path" value="${jde.home}/bin-win">
        <isset property="isWindows"/>
    </condition>

    <condition property="verify.path" value="${jde.home}/bin-OSX">
        <isset property="isMac"/>
    </condition>

    <condition property="verify.path" value="${jde.home}/bin-linux">
        <isset property="isUnixButNotMacOsX"/>
    </condition>

    <path id="build.classpath">
        <fileset dir="RapidFTR-Blackberry-Tests\\lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${output.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="test.classpath">
        <path refid="build.classpath"/>
        <fileset dir="RapidFTR-Blackberry-Tests/lib" includes="**/*.jar"/>
        <pathelement path="${tests.build.dir}"/>
    </path>

    <target name="clean">
        <delete failonerror="false">
            <fileset dir="${output.dir}" includes="**/*"/>
            <fileset dir="${report.dir}" includes="**/*"/>
            <fileset dir="${tests.build.dir}" includes="**/*"/>
            <fileset dir="${release.dir}" includes="**/*"/>
        </delete>
    </target>

    <target name="init" depends="clean">
        <mkdir dir="${output.dir}"/>
        <mkdir dir="${output.dir}/temp"/>
        <mkdir dir="${release.dir}"/>
        <mkdir dir="${tests.build.dir}"/>
        <mkdir dir="${report.dir}"/>
    </target>


    <target name="compile" depends="init">

        <rapc srcdir="${src.dir}" output="${output.file}" destdir="${output.dir}/temp" exepath="${verify.path}">
            <jdp title="${app.title}" vendor="${app.vendor}" version="${app.version}" type="cldc" icon="../RapidFTR-Blackberry/src/res/cf68.png" ribbonposition="99"/>
        </rapc>

        <jar destfile="${output.dir}/temp/${output.file}.jar" update="true">
            <fileset dir="${src.dir}">
                <exclude name="**/Thumbs.db"/>
                <exclude name="**/*.java"/>
            </fileset>
        </jar>

        <copy file="${output.dir}/temp/${output.file}.jar" todir="${output.dir}"/>

        <delete failonerror="true">
            <fileset dir="${output.dir}/temp"/>
        </delete>

        <rapc srcdir="${output.dir}" output="${output.file}" destdir="${output.dir}" exepath="${verify.path}">
            <jdp title="${app.title}" vendor="${app.vendor}" version="${app.version}" type="cldc" icon="../RapidFTR-Blackberry/src/res/cf68.png" ribbonposition="99"/>
        </rapc>
    </target>

    <target name="sign" depends="test">
        <echo message="${output.dir}"/>
        <java jar="${signatureTool-jar}" fork="true" dir="${output.dir}" failonerror="true">
            <arg line=" -a -p ${signing.code} -c -C  RapidFTR.cod"/>
        </java>
    </target>

    <target name="release" depends="sign">
        <alx destdir="${release.dir}" filename="${output.file}.alx">
            <application id="${app.id}" name="${app.title}" vendor="${app.vendor}" version="${app.version}">
                <codset greaterthanequal="4.6.1">
                    <fileset dir="${output.dir}" includes="*.cod"/>
                </codset>
            </application>
        </alx>
        <jadtool input="${output.dir}/${output.file}.jad" destdir="${release.dir}">
            <fileset dir="build" includes="*.cod"/>
        </jadtool>
        <echo file="${release.dir}/version.txt" message="${app.version}"/>
    </target>

    <!-- Load to device -->
    <target name="load" depends="sign">
        <exec executable="${jde.home}/bin/JavaLoader.exe" dir="." failonerror="true">
            <arg value="-u"/>
            <arg value="load"/>
            <arg value="output/tocod/${output.file}.cod"/>
        </exec>
    </target>

    <target name="compile-tests" depends="compile">
        <javac srcdir="${tests.src.dir}" destdir="${tests.build.dir}" classpathref="test.classpath"/>
    </target>

    <target name="test" depends="compile-tests">
        <junit printsummary="yes" haltonfailure="no" failureproperty="unit.tests.failed"
               fork="yes" forkmode="once">
            <classpath refid="test.classpath">
            </classpath>
            <formatter type="xml"/>
            <batchtest todir="${report.dir}">
                <fileset dir="${tests.src.dir}">
		 <include name="**/*Test*"/>	
		</fileset>
            </batchtest>
        </junit>
        <junitreport todir="${report.dir}">
            <fileset dir="${report.dir}" includes="TEST-*.xml"/>
            <report todir="${report.dir}"/>
        </junitreport>
        <fail if="unit.tests.failed" message="Unit tests failed"/>
    </target>

</project>
